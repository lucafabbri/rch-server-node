"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Crawler = void 0;
const tslib_1 = require("tslib");
const EcrDevice_1 = require("../EcrDevice");
const ConnectionConst_1 = require("../ConnectionConst");
const local_devices_1 = (0, tslib_1.__importDefault)(require("local-devices"));
/**
 * This class is a local Network Crawler to find devices on the local network
 * @date 1/11/2022 - 12:19:23 PM
 *
 * @export
 * @class Crawler
 * @typedef {Crawler}
 */
class Crawler {
    /**
     * Ping all the available device in the network and find potential IECRDevice candidates
     * @date 1/11/2022 - 12:19:58 PM
     *
     * @static
     * @async
     * @returns {Promise<Array<IEcrDevice>>}
     */
    static ping_all() {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {
            let results = [];
            try {
                let pingResults = yield (0, local_devices_1.default)();
                console.debug(this.logTag + "Devices found on Local Network: " + pingResults.length);
                pingResults.forEach((res) => {
                    let device = new EcrDevice_1.EcrDevice();
                    device.ip = res.ip;
                    device.hostName = res.name;
                    device.macAddress = res.mac;
                    device.connection = ConnectionConst_1.ConnectionConst.TCPIP;
                    results.push(device);
                });
            }
            catch (e) {
                console.error(this.logTag + e);
            }
            return results;
        });
    }
}
exports.Crawler = Crawler;
Crawler.logTag = "[Crawler]: ";
//# sourceMappingURL=Crawler.js.map