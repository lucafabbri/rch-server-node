import { ICourtesyLine } from "../interfaces/ICourtesyLine";
import { IDepartment } from "../interfaces/IDepartment";
import { IGroup } from "../interfaces/IGroup";
import { IHeadingRow } from "../interfaces/IHeadingRow";
import { IInvoiceText } from "../interfaces/IInvoiceText";
import { ILogo } from "../interfaces/ILogo";
import { IOperator } from "../interfaces/IOperator";
import { IPayment } from "../interfaces/IPayment";
import { IPeriodCheck } from "../interfaces/IPeriodCheck";
import { IProg } from "../interfaces/IProg";
import { ISlidingMsg } from "../interfaces/ISlidingMsg";
import { IVat } from "../interfaces/IVat";
import { IXMLSendSchedule } from "../interfaces/IXMLSendSchedule";
import { AbstractParser } from "./AbstractParser";
/**
 * @inheritdoc
 *
 * @export
 * @class Prog
 * @typedef {Prog}
 * @extends {AbstractParser}
 * @implements {IProg}
 */
export declare class Prog extends AbstractParser implements IProg {
    /**
     * @inheritdoc
     */
    statDepartment: boolean | null;
    /**
     * @inheritdoc
     */
    statVat: boolean | null;
    /**
     * @inheritdoc
     */
    statHour: boolean | null;
    /**
     * @inheritdoc
     */
    statClerk: boolean | null;
    /**
     * @inheritdoc
     */
    statFinancial: boolean | null;
    /**
     * @inheritdoc
     */
    statGrpDetail: boolean | null;
    /**
     * @inheritdoc
     */
    statGrpTot: boolean | null;
    /**
     * @inheritdoc
     */
    logo: ILogo[];
    /**
     * @inheritdoc
     */
    courtesyLine: ICourtesyLine[];
    /**
     * @inheritdoc
     */
    slidingMsg: ISlidingMsg | null;
    /**
     * @inheritdoc
     */
    percDiscount: number;
    /**
     * @inheritdoc
     */
    percAddon: number;
    /**
     * @inheritdoc
     */
    drawerPulse: number;
    /**
     * @inheritdoc
     */
    eCRNum: number;
    /**
     * @inheritdoc
     */
    intInvoice: boolean;
    /**
     * @inheritdoc
     */
    invoice2Lines: boolean;
    /**
     * @inheritdoc
     */
    invoiceSubtotal: boolean;
    /**
     * @inheritdoc
     */
    invoiceClientCheck: boolean;
    /**
     * @inheritdoc
     */
    fidelity: boolean | null;
    /**
     * @inheritdoc
     */
    pcsOperatorPrint: boolean | null;
    /**
     * @inheritdoc
     */
    kbdPrebill: boolean | null;
    /**
     * @inheritdoc
     */
    periodCheck: IPeriodCheck | null;
    /**
     * @inheritdoc
     */
    printECRNum: boolean;
    /**
     * @inheritdoc
     */
    singleQuantity: boolean;
    /**
     * @inheritdoc
     */
    printUnitPrice: boolean | null;
    /**
     * @inheritdoc
     */
    showChange: boolean;
    /**
     * @inheritdoc
     */
    mandSubtotal: boolean | null;
    /**
     * @inheritdoc
     */
    cutter: boolean | null;
    /**
     * @inheritdoc
     */
    midnightAlert: boolean;
    /**
     * @inheritdoc
     */
    creditNote: boolean | null;
    /**
     * @inheritdoc
     */
    creditNoteProgressive: number;
    /**
     * @inheritdoc
     */
    cashDeclaration: boolean | null;
    /**
     * @inheritdoc
     */
    printBuffer: boolean | null;
    /**
     * @inheritdoc
     */
    departmentNet: boolean | null;
    /**
     * @inheritdoc
     */
    appendixCut: boolean | null;
    /**
     * @inheritdoc
     */
    vatVentilation: boolean | null;
    /**
     * @inheritdoc
     */
    printLastReceiptFromDGFE: boolean | null;
    /**
     * @inheritdoc
     */
    invoiceProgressive: number;
    /**
     * @inheritdoc
     */
    receiptLimit: number;
    /**
     * @inheritdoc
     */
    xMLSendSchedule: IXMLSendSchedule | null;
    /**
     * @inheritdoc
     */
    invoiceText: IInvoiceText[];
    /**
     * @inheritdoc
     */
    departments: IDepartment[];
    /**
     * @inheritdoc
     */
    vats: IVat[];
    /**
     * @inheritdoc
     */
    operators: IOperator[];
    /**
     * @inheritdoc
     */
    payments: IPayment[];
    /**
     * @inheritdoc
     */
    groups: IGroup[];
    /**
     * @inheritdoc
     */
    courtesyLines: ICourtesyLine[];
    /**
     * @inheritdoc
     */
    headings: IHeadingRow[];
    /**
     * Creates an instance of Prog.
     * @date 1/11/2022 - 12:17:05 PM
     *
     * @constructor
     * @public
     */
    constructor();
    /**
     * Creates an instance of Prog.
     * @date 1/11/2022 - 12:17:09 PM
     *
     * @constructor
     * @public
     * @param {Array<string>} entries
     */
    constructor(entries: Array<string>);
}
